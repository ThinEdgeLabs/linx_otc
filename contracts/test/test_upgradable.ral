Contract TestUpgradable (
  immValue: U256,
  upgradeDelay: U256,
  mut mutValue: U256,
  mut owner: Address,
  mut newOwner: Address,
  mut upgradeInitiated: U256,
  mut newCode: ByteVec,
  mut newImmFieldsEncoded: ByteVec,
  mut newMutFieldsEncoded: ByteVec
) extends Upgradable(upgradeDelay, owner, newOwner, upgradeInitiated, newCode, newImmFieldsEncoded, newMutFieldsEncoded) {

  pub fn getImmValue() -> (U256) { return immValue * 2 }
  pub fn getMutValue() -> (U256) { return mutValue * 2 }
  pub fn getTotal() -> (U256) { return getImmValue() + getMutValue() }
  @using(updateFields = true, checkExternalCaller = false)
  pub fn setMutValue(newMutValue: U256) -> () { mutValue = newMutValue * 2 }
}